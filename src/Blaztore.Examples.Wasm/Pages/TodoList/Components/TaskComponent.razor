@using Blaztore.Examples.Wasm.Services
@using Blaztore.Components
@using Blaztore.Gateways
@inherits BaseStateComponent

<div class="task">
    <input
        type="checkbox"
        value="@Task.IsDone"
        @oninput="@(args => GlobalGateway.Dispatch(new TodoListState.ToggleIsDone(Task.Id, (bool?)args.Value ?? false)))"/>
    
    <span class="@(Task.IsDone ? "line-through" : string.Empty)">
        @Task.Description
    </span>
    
    <button
        @onclick="@(_ => Gateway.Dispatch(new TaskComponentState.DeleteItem(Task.Id)))"
        disabled="@State.IsDeleting">
        @if (State.IsDeleting)
        {
            <span>...</span>
        }
        else
        {
            <span>Delete</span>
        }
    </button>
</div>

<style>
    .task {
        display: flex;
        align-content: flex-start;
        align-items: center;
        gap: 4px;
        margin: 5px;
    }
    
    input[type='checkbox']
    {
        height: 20px;
        width: 20px;
    }
    
    .line-through {
        font-style: italic;
        text-decoration: line-through;
    }
</style>

@inject IScopedStateReduxGateway<TaskComponentState, Guid> Gateway
@inject IGlobalStateReduxGateway<TodoListState> GlobalGateway

@code {
    [Parameter]
    public TaskListItem Task { get; set; } = default!;

    private TaskComponentState State => Gateway.SubscribeToState(this, Task.Id);

}